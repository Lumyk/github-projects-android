
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql' 'Sources' '../java' ///

/// interface com.lumyk.swiftbindings.ProjectsTypes$TextListener ///

public protocol ProjectsTypes_TextListener: JavaProtocol {

    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText2()

    func getText2() -> String!

    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText3()

    func getText3() -> String!

    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText4()

    func getText4() -> String!

    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText5()

    func getText5() -> String!

}


open class ProjectsTypes_TextListenerForward: JNIObjectForward, ProjectsTypes_TextListener {

    private static var ProjectsTypes_TextListenerJNIClass: jclass?

    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText2()

    private static var getText2_MethodID_5: jmethodID?

    open func getText2() -> String! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getText2", methodSig: "()Ljava/lang/String;", methodCache: &ProjectsTypes_TextListenerForward.getText2_MethodID_5, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? String( javaObject: __return ) : nil
    }


    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText3()

    private static var getText3_MethodID_6: jmethodID?

    open func getText3() -> String! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getText3", methodSig: "()Ljava/lang/String;", methodCache: &ProjectsTypes_TextListenerForward.getText3_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? String( javaObject: __return ) : nil
    }


    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText4()

    private static var getText4_MethodID_7: jmethodID?

    open func getText4() -> String! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getText4", methodSig: "()Ljava/lang/String;", methodCache: &ProjectsTypes_TextListenerForward.getText4_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? String( javaObject: __return ) : nil
    }


    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText5()

    private static var getText5_MethodID_8: jmethodID?

    open func getText5() -> String! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getText5", methodSig: "()Ljava/lang/String;", methodCache: &ProjectsTypes_TextListenerForward.getText5_MethodID_8, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? String( javaObject: __return ) : nil
    }


}

private typealias ProjectsTypes_TextListener_getText2_0_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong ) -> jobject?

private func ProjectsTypes_TextListener_getText2_0( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong ) -> jobject? {
    let __return = ProjectsTypes_TextListenerLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).getText2( )
    var __locals = [jobject]()
    return JNI.check( JNIType.toJava( value: __return, locals: &__locals ).l, &__locals, removeLast: true )
}

private typealias ProjectsTypes_TextListener_getText3_1_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong ) -> jobject?

private func ProjectsTypes_TextListener_getText3_1( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong ) -> jobject? {
    let __return = ProjectsTypes_TextListenerLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).getText3( )
    var __locals = [jobject]()
    return JNI.check( JNIType.toJava( value: __return, locals: &__locals ).l, &__locals, removeLast: true )
}

private typealias ProjectsTypes_TextListener_getText4_2_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong ) -> jobject?

private func ProjectsTypes_TextListener_getText4_2( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong ) -> jobject? {
    let __return = ProjectsTypes_TextListenerLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).getText4( )
    var __locals = [jobject]()
    return JNI.check( JNIType.toJava( value: __return, locals: &__locals ).l, &__locals, removeLast: true )
}

private typealias ProjectsTypes_TextListener_getText5_3_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong ) -> jobject?

private func ProjectsTypes_TextListener_getText5_3( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong ) -> jobject? {
    let __return = ProjectsTypes_TextListenerLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).getText5( )
    var __locals = [jobject]()
    return JNI.check( JNIType.toJava( value: __return, locals: &__locals ).l, &__locals, removeLast: true )
}

fileprivate class ProjectsTypes_TextListenerLocal_: JNILocalProxy<ProjectsTypes_TextListener, Any> {

    fileprivate static let _proxyClass: jclass = {
        var natives = [JNINativeMethod]()

        let ProjectsTypes_TextListener_getText2_0_thunk: ProjectsTypes_TextListener_getText2_0_type = ProjectsTypes_TextListener_getText2_0
        natives.append( JNINativeMethod( name: strdup("__getText2"), signature: strdup("(J)Ljava/lang/String;"), fnPtr: unsafeBitCast( ProjectsTypes_TextListener_getText2_0_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ProjectsTypes_TextListener_getText3_1_thunk: ProjectsTypes_TextListener_getText3_1_type = ProjectsTypes_TextListener_getText3_1
        natives.append( JNINativeMethod( name: strdup("__getText3"), signature: strdup("(J)Ljava/lang/String;"), fnPtr: unsafeBitCast( ProjectsTypes_TextListener_getText3_1_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ProjectsTypes_TextListener_getText4_2_thunk: ProjectsTypes_TextListener_getText4_2_type = ProjectsTypes_TextListener_getText4_2
        natives.append( JNINativeMethod( name: strdup("__getText4"), signature: strdup("(J)Ljava/lang/String;"), fnPtr: unsafeBitCast( ProjectsTypes_TextListener_getText4_2_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ProjectsTypes_TextListener_getText5_3_thunk: ProjectsTypes_TextListener_getText5_3_type = ProjectsTypes_TextListener_getText5_3
        natives.append( JNINativeMethod( name: strdup("__getText5"), signature: strdup("(J)Ljava/lang/String;"), fnPtr: unsafeBitCast( ProjectsTypes_TextListener_getText5_3_thunk, to: UnsafeMutableRawPointer.self ) ) )

        natives.append( JNINativeMethod( name: strdup("__finalize"), signature: strdup("(J)V"), fnPtr: unsafeBitCast( JNIReleasableProxy__finalize_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let clazz = JNI.FindClass( proxyClassName() )
        withUnsafePointer(to: &natives[0]) {
            nativesPtr in
            if JNI.api.RegisterNatives( JNI.env, clazz, nativesPtr, jint(natives.count) ) != jint(JNI_OK) {
                JNI.report( "Unable to register java natives" )
            }
        }

        defer { JNI.DeleteLocalRef( clazz ) }
        return JNI.api.NewGlobalRef( JNI.env, clazz )!
    }()

    override open class func proxyClassName() -> String { return "org/swiftjava/com_lumyk/ProjectsTypes_TextListenerProxy" }
    override open class func proxyClass() -> jclass? { return _proxyClass }

}

extension ProjectsTypes_TextListener {

    public func localJavaObject( _ locals: UnsafeMutablePointer<[jobject]> ) -> jobject? {
        return ProjectsTypes_TextListenerLocal_( owned: self, proto: self ).localJavaObject( locals )
    }

}

open class ProjectsTypes_TextListenerBase: ProjectsTypes_TextListener {

    public init() {}

    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText2()

    open func getText2() -> String! /**/ {
        return nil
    }


    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText3()

    open func getText3() -> String! /**/ {
        return nil
    }


    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText4()

    open func getText4() -> String! /**/ {
        return nil
    }


    /// public abstract java.lang.String com.lumyk.swiftbindings.ProjectsTypes$TextListener.getText5()

    open func getText5() -> String! /**/ {
        return nil
    }


}
